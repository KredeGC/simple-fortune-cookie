name: Production CD

on:
  push:
    branches:
      'main'

jobs:
  Build:
    runs-on: self-hosted
    container: golang:1.18
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build backendhttps://vscode.inst67.z1.eficode.academy/?folder=/home/ubuntu/simple-fortune-cookie
        run: cd backend && go build .
      - name: Build frontend
        run: cd frontend && go build .
      - name: Upload build
        uses: actions/upload-artifact@v3
        with: 
          name: build
          path: |
            .
            !.git
            !.github
  Unit-test:
    runs-on: self-hosted
    container: golang:1.18
    needs: Build
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build
          path: .
      - name: Install GCC
        run: apt update && apt install build-essential -y
      - name: Test
        run: cd frontend && go test
  Integration-test:
    runs-on: self-hosted
    container: ubuntu:20.04
    needs: Build
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build
          path: .
      - name: Get request
        run: echo "TODO 04 Integration testing"
  Docker-push-backend:
    runs-on: self-hosted
    container: docker:latest
    needs: [Unit-test, Integration-test]
    steps:
      - name: Download code
        uses: actions/download-artifact@v3
        with:
          name: build
          path: .
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build backend
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/backend:latest
  Docker-push-frontend:
    runs-on: self-hosted
    container: docker:latest
    needs: [Unit-test, Integration-test]
    steps:
      - name: Download code
        uses: actions/download-artifact@v3
        with:
          name: build
          path: .
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build frontend
        uses: docker/build-push-action@v3
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend:latest
  Deploy:
    runs-on: self-hosted
    needs: [Docker-push-backend, Docker-push-frontend]
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: backend
          path: .
      - name: Stop running process
        run: docker-compose down
      - name: Run docker-compose
        run: docker-compose up -d