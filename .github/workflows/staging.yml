name: Staging CI

on:
  pull_request:
    branches:
      'main'

jobs:
  Build:
    runs-on: self-hosted
    container: golang:1.18
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build backend
        run: cd backend && go build .
      - name: Build frontend
        run: cd frontend && go build .
      - name: Upload build
        uses: actions/upload-artifact@v3
        with: 
          name: build
          path: |
            .
            !.git
            !.github
  Unit-test:
    runs-on: self-hosted
    container: golang:1.18
    needs: Build
    steps:
      - name: Cleanup build folder
        run: |
          ls -la ./
          sudo rm -rf ./* || true
          sudo rm -rf ./.??* || true
          ls -la ./
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build
          path: .
      - name: Install GCC
        run: apt update && apt install build-essential -y
      - name: Test
        run: cd frontend && go test
  Integration-test:
    runs-on: self-hosted
    needs: Build
    steps:
      - name: Cleanup build folder
        run: |
          ls -la ./
          sudo rm -rf ./* || true
          sudo rm -rf ./.??* || true
          ls -la ./
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build
          path: .
      - name: Run test suite
        run: sudo chmod +x ci/test.sh && ci/test.sh ${{ github.sha }}
  Docker-build-backend:
    runs-on: self-hosted
    needs: [Unit-test, Integration-test]
    steps:
      - name: Cleanup build folder
        run: |
          ls -la ./
          sudo rm -rf ./* || true
          sudo rm -rf ./.??* || true
          ls -la ./
      - name: Download code
        uses: actions/download-artifact@v3
        with:
          name: build
          path: .
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build backend
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          push: false
          tags: ${{ secrets.DOCKER_USERNAME }}/backend:latest
  Docker-build-frontend:
    runs-on: self-hosted
    needs: [Unit-test, Integration-test]
    steps:
      - name: Cleanup build folder
        run: |
          ls -la ./
          sudo rm -rf ./* || true
          sudo rm -rf ./.??* || true
          ls -la ./
      - name: Download code
        uses: actions/download-artifact@v3
        with:
          name: build
          path: .
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build frontend
        uses: docker/build-push-action@v3
        with:
          context: ./frontend
          push: false
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend:latest