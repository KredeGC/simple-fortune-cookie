name: Go CI

on: [push, pull_request]
jobs:
  Build:
    runs-on: self-hosted
    container: golang:1.18-alpine
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build backend
        run: cd backend && go build .
      - name: Build frontend
        run: cd frontend && go build .
      - name: Upload build
        uses: actions/upload-artifact@v2
        with: 
          name: build
          path: .
  Test:
    runs-on: self-hosted
    container: golang:1.18-alpine
    needs: Build
    if: github.event_name == 'pull_request'
    steps:
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: build
          path: .
      - name: Install GCC
        run: apk update && apk add build-base
      - name: Test
        run: cd frontend && go test
  Docker-build-frontend:
    runs-on: self-hosted
    needs: [Test]
    container: golang:1.18-alpine
    steps:
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: build
          path: .
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./frontend/Dockerfile
          push: true
          tags: user/app:latest
  Docker-build-backend:
    runs-on: self-hosted
    needs: [Test]
    container: golang:1.18-alpine
    steps:
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: build
          path: .
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./backend/Dockerfile
          push: true
          tags: user/app:latest